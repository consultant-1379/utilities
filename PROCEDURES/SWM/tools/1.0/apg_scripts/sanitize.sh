#!/bin/bash
##
# ------------------------------------------------------------------------
#     Copyright (C) 2016 Ericsson AB. All rights reserved.
# ------------------------------------------------------------------------
##
# Name:
#   sanitize.sh
#
# Description:
#   A script to execute some cleanup operations during the campaign
#   generation phase, corresponding to the 'createUpgradePackageLocal' action
#   invokation.
#
# Return value:
#   0 -> true  -> Success: the part of campaign is included.
#   1 -> false -> Success: the part of campaign is excluded.
#   2 -> error -> Failure: error occurred and the campaign generation stops. 
##
# Changelog:
# - Fri Oct 21 2016 - Alessio Cascone (ealocae)
#     Fixed issue about missing objects.
# - Mon Oct 10 2016 - Alessio Cascone (ealocae)
#     First version.
##

# BEGIN: Variables section
APP_NAME=$(basename $0)
EXIT_SUCCESS_INCLUDE=$(true; echo $?)
EXIT_SUCCESS_EXCLUDE=$(false; echo $?)    # Not used, for now.
EXIT_FAILURE=2
# END: Variables section

# BEGIN: Functions section
function log() {
  /bin/logger -t $APP_NAME "$*"
}

function abort() {
  /bin/logger -p err -t $APP_NAME "ABORTING: $*"
  exit $EXIT_FAILURE
}

function remove_duplicate_sec_control_saf_version(){
  local COMP_TYPE=$1
  local BUNDLE=$(immfind | grep ^safSmfBundle=ERIC-sec-cert-manager | sed 's/.*cxp9027891-//')
  local safVersion=${BUNDLE%.*}
  if [[ $COMP_TYPE =~ ERIC-Sec-Control ]]; then
    local DN_COUNT=$(immfind |  grep -E '^safVersion=.*,safCompType=ERIC-Sec-Control' | wc -l )
    if [ $DN_COUNT -gt 1 ]; then
      # Delete safVersion that is passive
      local SEC_SAF_VERSION_OBJ="safVersion=$safVersion,safCompType=ERIC-Sec-Control"
      immcfg -d $SEC_SAF_VERSION_OBJ &> /dev/null
      if [ $? -eq 0 ]; then
         sed -i -r -e "/((^)|(,))${SEC_SAF_VERSION_OBJ}$/d" $CAMPAIGN_GENERATE_TEMP_FILES_PATTERN &> /dev/null
         [ $? -eq 0 ] || abort "Failed to remove the object with DN '$SEC_SAF_VERSION_OBJ' from temp file."
      fi 
      # Delete passive safMemberCompType of Sec-Control
      local SEC_COMP_OBJ="safMemberCompType=safVersion=$safVersion.*,safCompType=ERIC-Sec-Control,.*,safSuType=ERIC-APG_SU_2N"
      immcfg -d "safMemberCompType=safVersion=$safVersion\\,safCompType=ERIC-Sec-Control,safVersion=1.0.0,safSuType=ERIC-APG_SU_2N"  &> /dev/null
      if [ $? -eq 0 ]; then
        sed -i -r "/"${SEC_COMP_OBJ}"/d" $CAMPAIGN_GENERATE_TEMP_FILES_PATTERN &> /dev/null
        [ $? -eq 0 ] || abort "Failed to remove the object with DN '$SEC_COMP_OBJ' from temp file."
      fi
    fi
  else
    local DN_COUNT=$(immfind |  grep -E ^safVersion=.*,safCompType=$COMP_TYPE | wc -l )
    if [ $DN_COUNT -gt 1 ]; then
      # Delete safVersion that is passive
      local SEC_SAF_VERSION_OBJ="safVersion=$safVersion,safCompType=$COMP_TYPE"
      immcfg -d $SEC_SAF_VERSION_OBJ &> /dev/null
      if [ $? -eq 0 ]; then
        sed -i -r -e "/((^)|(,))${SEC_SAF_VERSION_OBJ}$/d" $CAMPAIGN_GENERATE_TEMP_FILES_PATTERN &> /dev/null
        [ $? -eq 0 ] || abort "Failed to remove the object with DN '$SEC_SAF_VERSION_OBJ' from temp file."
      fi
       # Delete passive safMemberCompType of Sec-Control
       local SEC_COMP_OBJ="safMemberCompType=safVersion=$safVersion.*,safCompType=$COMP_TYPE,.*,safSuType=$COMP_TYPE"
       immcfg -d "safMemberCompType=safVersion=$safVersion\\,safCompType=$COMP_TYPE,safVersion=1.0.0,safSuType=$COMP_TYPE" &> /dev/null
       if [ $? -eq 0 ]; then
          sed -i -r "/"${SEC_COMP_OBJ}"/d" $CAMPAIGN_GENERATE_TEMP_FILES_PATTERN &> /dev/null
          [ $? -eq 0 ] || abort "Failed to remove the object with DN '$SEC_COMP_OBJ' from temp file."
       fi
     fi
   fi      
 
    
}

function remove_duplicated_saf_version() {
  log "Entering: $FUNCNAME"
  
  ### !!! IMPORTANT NOTE !!! ###
  ## TO READ CAREFULLY:
  #
  # This variable points to the pattern of temporary files generated by
  # CMW campaign generate script. In order to make working the current function
  # please, be sure that the temporary file name pattern in that variable is
  # the same of the temporary file created by CMW campaign generate script!
  local CAMPAIGN_GENERATE_TEMP_FILES_PATTERN="/tmp/campaign-generate.immfind.*"
  ##
  ### !!! IMPORTANT NOTE !!! ###
  
  # Loop over the available instances of SaAmfCompType class
  while read OBJ
  do
    # Escape the retrieved object DN
    local ESCAPED_OBJ_DN=$(echo $OBJ | sed 's@,@\\\\,@g')
    local SEC_OBJ_DN=$(echo $ESCAPED_OBJ_DN | awk -F'safCompType=' '{print $2}')
    if [[ $SEC_OBJ_DN =~ ERIC-Sec-Control || $SEC_OBJ_DN =~ ERIC-SecLdap || $SEC_OBJ_DN =~ ERIC-SecSecM ]]; then 
      remove_duplicate_sec_control_saf_version  $SEC_OBJ_DN  
    else
      # In order to understand if the current instance of SaAmfCompType class is
      # used or not, check if a SaAmfSutCompType class instance with the retrieved
      # DN is available
      /usr/bin/immfind -c SaAmfSutCompType | grep $ESCAPED_OBJ_DN &> /dev/null
      if [ $? -eq 1 ]; then
        # In case no SaAmfSutCompType is found, that mean that the object is 
        # a duplicated one and it can be deleted (or that the SaAmfSutCompType
        # object is missing).
        log "The object with DN '$OBJ' was a duplicated object, deleting it!"

        # Try to delete the object from IMM
        /usr/bin/immcfg -d $OBJ &> /dev/null
        if [ $? -eq 0 ]; then
          # Due to some CMW optimizations, the whole IMM content is copied into a 
          # temporary file in order to be faster while generating the campaign from
          # the template file. For that reason the object removal is not enough:
          # it's also needed to remove the deleted object (and its children) from
          # the temporary file in which CMW campaign generate script looks during
          # campaign generation phase.
          sed -i -r -e "/((^)|(,))${OBJ}$/d" $CAMPAIGN_GENERATE_TEMP_FILES_PATTERN &> /dev/null
          [ $? -eq 0 ] || abort "Failed to remove the object with DN '$OBJ' from temp file."
        else
          # Object delete failed: probably there was a missing object that leads
          # to think that the object is duplicated: log a warning and go over!
          log "WARNING: The removal of the object with DN '$OBJ' was failed, probably is is not duplicated!"
        fi
      fi
    fi
  done < <(/usr/bin/immfind -c SaAmfCompType | grep -E 'ERIC-APG|ERIC-Sec-Control|ERIC-SecLdap|ERIC-SecSecM')

  log "Exiting: $FUNCNAME"
}
# END: Functions section

#                                              __    __   _______   _   __    _
#                                             |  \  /  | |  ___  | | | |  \  | |
#                                             |   \/   | | |___| | | | |   \ | |
#                                             | |\  /| | |  ___  | | | | |\ \| |
#                                             | | \/ | | | |   | | | | | | \   |
#                                             |_|    |_| |_|   |_| |_| |_|  \__|
#
log "Entering: $APP_NAME"

# Prints error in case of unset variables
set -u

# Remove the duplicated instances of safVersion objects from IMM (if present)
remove_duplicated_saf_version 

log "Exiting: $APP_NAME"
exit $EXIT_SUCCESS_INCLUDE

# End of file
